# Generated by Django 5.2.4 on 2025-08-16 13:45

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AIUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.CharField(max_length=100, verbose_name='API Endpoint')),
                ('tokens_used', models.PositiveIntegerField(verbose_name='Tokens Used')),
                ('model_used', models.CharField(max_length=50, verbose_name='AI Model Used')),
                ('processing_time', models.FloatField(verbose_name='Processing Time (seconds)')),
                ('cost', models.DecimalField(decimal_places=6, max_digits=10, verbose_name='Cost (USD)')),
                ('success', models.BooleanField(default=True, verbose_name='Request Successful')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'AI Usage Log',
                'verbose_name_plural': 'AI Usage Logs',
                'db_table': 'ai_usage_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Conversation Title')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Conversation',
                'verbose_name_plural': 'Conversations',
                'db_table': 'conversations',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('ai', 'AI Response')], max_length=10, verbose_name='Message Type')),
                ('content', models.TextField(verbose_name='Message Content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('tokens_used', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tokens Used')),
                ('model_used', models.CharField(blank=True, max_length=50, verbose_name='AI Model Used')),
                ('processing_time', models.FloatField(blank=True, null=True, verbose_name='Processing Time (seconds)')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'db_table': 'messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PolicyAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField(verbose_name='User Query')),
                ('response', models.TextField(verbose_name='AI Response')),
                ('analysis_type', models.CharField(choices=[('general', 'General Query'), ('coverage', 'Coverage Analysis'), ('exclusions', 'Exclusions Analysis'), ('comparison', 'Policy Comparison'), ('summary', 'Policy Summary')], max_length=50, verbose_name='Analysis Type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('confidence_score', models.FloatField(blank=True, null=True, verbose_name='Confidence Score')),
                ('relevant_sections', models.JSONField(blank=True, default=list, verbose_name='Relevant Policy Sections')),
                ('tokens_used', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tokens Used')),
            ],
            options={
                'verbose_name': 'Policy Analysis',
                'verbose_name_plural': 'Policy Analyses',
                'db_table': 'policy_analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PolicyComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comparison_criteria', models.JSONField(verbose_name='Comparison Criteria')),
                ('comparison_result', models.TextField(verbose_name='Comparison Result')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('comparison_score', models.FloatField(blank=True, null=True, verbose_name='Overall Comparison Score')),
                ('detailed_analysis', models.JSONField(blank=True, default=dict, verbose_name='Detailed Analysis')),
                ('recommendations', models.TextField(blank=True, verbose_name='AI Recommendations')),
            ],
            options={
                'verbose_name': 'Policy Comparison',
                'verbose_name_plural': 'Policy Comparisons',
                'db_table': 'policy_comparisons',
                'ordering': ['-created_at'],
            },
        ),
    ]
