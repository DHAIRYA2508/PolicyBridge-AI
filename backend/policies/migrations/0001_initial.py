# Generated by Django 4.2.7 on 2025-08-15 19:06

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('file', models.FileField(upload_to='policies/')),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('file_type', models.CharField(max_length=10)),
                ('extracted_text', models.TextField(blank=True, null=True)),
                ('text_length', models.IntegerField(default=0)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('processed', 'Processed'), ('error', 'Error')], default='uploaded', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Policy',
                'verbose_name_plural': 'Policies',
                'db_table': 'policies',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='PolicyTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Policy Tag',
                'verbose_name_plural': 'Policy Tags',
                'db_table': 'policy_tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PolicySection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_title', models.CharField(max_length=255)),
                ('section_content', models.TextField()),
                ('section_number', models.IntegerField()),
                ('page_number', models.IntegerField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('keywords', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='policies.policy')),
            ],
            options={
                'verbose_name': 'Policy Section',
                'verbose_name_plural': 'Policy Sections',
                'db_table': 'policy_sections',
                'ordering': ['section_number'],
            },
        ),
        migrations.CreateModel(
            name='PolicyComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comparison_type', models.CharField(choices=[('coverage', 'Coverage Comparison'), ('costs', 'Costs Comparison'), ('features', 'Features Comparison'), ('general', 'General Comparison')], max_length=20)),
                ('similarities', models.JSONField(blank=True, default=dict)),
                ('differences', models.JSONField(blank=True, default=dict)),
                ('recommendation', models.TextField(blank=True, null=True)),
                ('comparison_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('policies', models.ManyToManyField(related_name='comparisons', to='policies.policy')),
            ],
            options={
                'verbose_name': 'Policy Comparison',
                'verbose_name_plural': 'Policy Comparisons',
                'db_table': 'policy_comparisons',
                'ordering': ['-created_at'],
            },
        ),
    ]
